name: Upload Release Files

on:
  release:
    types:
      - published

jobs:
  build-win:
    name: Build Windows
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            py32
            py64
          key: ${{ runner.os }}-${{ hashFiles('**/embed.cmd') }}-${{ hashFiles('**/requirements.txt') }}

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Generate Embed
        shell: cmd
        run: embed.cmd

      - name: Gen zip files
        shell: cmd
        run: |
          tar cf model-train-embed-win32-${{steps.tag.outputs.tag}}.zip app.py assets py32 run32* *.md _*
          tar cf model-train-embed-win64-${{steps.tag.outputs.tag}}.zip app.py assets py64 run64* *.md _*
          tar cf model-train-${{steps.tag.outputs.tag}}.zip *.py assets *.md _* run.cmd

      - name: Upload to Release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "*.zip"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleaning
        shell: cmd
        run: |
          cd py32
          del *.py
          cd ..
          cd py64
          del *.py
          cd ..

  build-others:
    name: Build Mac and Linux
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [macos-11.0, ubuntu-18.04]
        include:
          - os: ubuntu-18.04
            name: linux
            path: ~/.cache/pip
          - os: macos-11.0
            name: mac
            path: ~/Library/Caches/pip

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - uses: actions/cache@v2
        with:
          path: ${{matrix.path}}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Build
        run: pyinstaller training_model_rf_ann.py

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Gen Zip
        run: tar cf model-training-${{matrix.name}}-${{steps.tag.outputs.tag}}.zip dist/*

      - name: Upload to Release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "*.zip"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
