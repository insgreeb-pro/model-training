# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'training_rf_ann.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from sklearn.ensemble import RandomForestClassifier
from sklearn.neural_network import MLPClassifier
#from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import StandardScaler  # doctest: +SKIP

import sklearn.utils._cython_blas
import sklearn.neighbors.typedefs
import sklearn.neighbors.quad_tree
import sklearn.tree
import sklearn.tree._utils
import os

import sip
import pandas as pd
import numpy as np
import pickle

#Initial declaration
ml_sensasi='Random Forest'
ml_kenyamanan='Random Forest'
ml_penerimaan='Random Forest'

scaler_sensasi=None
scaler_kenyamanan=None
scaler_penerimaan=None

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1128, 604)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 1131, 80))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_2 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(24)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(30, 130, 351, 321))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.groupBox = QtWidgets.QGroupBox(self.horizontalLayoutWidget_2)
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_8.setObjectName("label_8")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(10, 170, 181, 21))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_7.setObjectName("label_7")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_5.setObjectName("label_5")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_4.setObjectName("label_4")
        self.parameter1_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter1_sensasi.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_sensasi.setMaximum(999999999)
        self.parameter1_sensasi.setProperty("value", 100)
        self.parameter1_sensasi.setObjectName("parameter1_sensasi")
        self.parameter2_sensasi = QtWidgets.QComboBox(self.groupBox)
        self.parameter2_sensasi.setGeometry(QtCore.QRect(200, 50, 121, 22))
        self.parameter2_sensasi.setObjectName("parameter2_sensasi")
        self.parameter2_sensasi.addItem("")
        self.parameter2_sensasi.addItem("")
        self.parameter3_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter3_sensasi.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_sensasi.setObjectName("parameter3_sensasi")
        self.parameter4_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter4_sensasi.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_sensasi.setProperty("value", 2)
        self.parameter4_sensasi.setObjectName("parameter4_sensasi")
        self.parameter5_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter5_sensasi.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_sensasi.setProperty("value", 1)
        self.parameter5_sensasi.setObjectName("parameter5_sensasi")
        self.parameter6_sensasi = QtWidgets.QComboBox(self.groupBox)
        self.parameter6_sensasi.setGeometry(QtCore.QRect(200, 170, 121, 22))
        self.parameter6_sensasi.setObjectName("parameter6_sensasi")
        self.parameter6_sensasi.addItem("")
        self.parameter6_sensasi.addItem("")
        self.parameter6_sensasi.addItem("")
        
        self.training_sensasi = QtWidgets.QPushButton(self.groupBox)
        self.training_sensasi.setGeometry(QtCore.QRect(120, 210, 93, 28))
        self.training_sensasi.setObjectName("training_sensasi")
        self.training_sensasi.clicked.connect(self.parameter_training_sensasi)

        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label.setObjectName("label")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_9.setObjectName("label_9")
        self.akurasi_sensasi_latih = QtWidgets.QLabel(self.groupBox)
        self.akurasi_sensasi_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_sensasi_latih.setObjectName("akurasi_sensasi_latih")
        self.akurasi_sensasi_uji = QtWidgets.QLabel(self.groupBox)
        self.akurasi_sensasi_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_sensasi_uji.setObjectName("akurasi_sensasi_uji")
        self.label_12 = QtWidgets.QLabel(self.groupBox)
        self.label_12.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.groupBox)
        self.label_13.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox)
        self.label_14.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.groupBox)
        self.label_15.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.groupBox)
        self.label_16.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.groupBox)
        self.label_17.setGeometry(QtCore.QRect(180, 170, 21, 21))
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.groupBox)
        self.label_18.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.groupBox)
        self.label_19.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_19.setObjectName("label_19")
        self.horizontalLayout_4.addWidget(self.groupBox)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(390, 130, 351, 321))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.groupBox_2 = QtWidgets.QGroupBox(self.horizontalLayoutWidget_3)
        self.groupBox_2.setFlat(False)
        self.groupBox_2.setCheckable(False)
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_38 = QtWidgets.QLabel(self.groupBox_2)
        self.label_38.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_38.setObjectName("label_38")
        self.label_39 = QtWidgets.QLabel(self.groupBox_2)
        self.label_39.setGeometry(QtCore.QRect(10, 170, 181, 21))
        self.label_39.setObjectName("label_39")
        self.label_40 = QtWidgets.QLabel(self.groupBox_2)
        self.label_40.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_40.setObjectName("label_40")
        self.label_41 = QtWidgets.QLabel(self.groupBox_2)
        self.label_41.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_41.setObjectName("label_41")
        self.label_42 = QtWidgets.QLabel(self.groupBox_2)
        self.label_42.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.label_42.setObjectName("label_42")
        self.label_43 = QtWidgets.QLabel(self.groupBox_2)
        self.label_43.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_43.setObjectName("label_43")
        self.parameter1_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter1_kenyamanan.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_kenyamanan.setMaximum(999999999)
        self.parameter1_kenyamanan.setProperty("value", 100)
        self.parameter1_kenyamanan.setObjectName("parameter1_kenyamanan")
        self.parameter2_kenyamanan = QtWidgets.QComboBox(self.groupBox_2)
        self.parameter2_kenyamanan.setGeometry(QtCore.QRect(200, 50, 121, 22))
        self.parameter2_kenyamanan.setObjectName("parameter2_kenyamanan")
        self.parameter2_kenyamanan.addItem("")
        self.parameter2_kenyamanan.addItem("")
        self.parameter3_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter3_kenyamanan.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_kenyamanan.setObjectName("parameter3_kenyamanan")
        self.parameter4_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter4_kenyamanan.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_kenyamanan.setProperty("value", 2)
        self.parameter4_kenyamanan.setObjectName("parameter4_kenyamanan")
        self.parameter5_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter5_kenyamanan.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_kenyamanan.setProperty("value", 1)
        self.parameter5_kenyamanan.setObjectName("parameter5_kenyamanan")
        self.parameter6_kenyamanan = QtWidgets.QComboBox(self.groupBox_2)
        self.parameter6_kenyamanan.setGeometry(QtCore.QRect(200, 170, 121, 22))
        self.parameter6_kenyamanan.setObjectName("parameter6_kenyamanan")
        self.parameter6_kenyamanan.addItem("")
        self.parameter6_kenyamanan.addItem("")
        self.parameter6_kenyamanan.addItem("")

        self.training_kenyamanan = QtWidgets.QPushButton(self.groupBox_2)
        self.training_kenyamanan.setGeometry(QtCore.QRect(120, 210, 93, 28))
        self.training_kenyamanan.setObjectName("training_kenyamanan")
        self.training_kenyamanan.clicked.connect(self.parameter_training_kenyamanan)

        self.label_44 = QtWidgets.QLabel(self.groupBox_2)
        self.label_44.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label_44.setObjectName("label_44")
        self.label_45 = QtWidgets.QLabel(self.groupBox_2)
        self.label_45.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_45.setObjectName("label_45")
        self.akurasi_kenyamanan_latih = QtWidgets.QLabel(self.groupBox_2)
        self.akurasi_kenyamanan_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_kenyamanan_latih.setObjectName("akurasi_kenyamanan_latih")
        self.akurasi_kenyamanan_uji = QtWidgets.QLabel(self.groupBox_2)
        self.akurasi_kenyamanan_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_kenyamanan_uji.setObjectName("akurasi_kenyamanan_uji")
        self.label_48 = QtWidgets.QLabel(self.groupBox_2)
        self.label_48.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_48.setObjectName("label_48")
        self.label_49 = QtWidgets.QLabel(self.groupBox_2)
        self.label_49.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_49.setObjectName("label_49")
        self.label_50 = QtWidgets.QLabel(self.groupBox_2)
        self.label_50.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_50.setObjectName("label_50")
        self.label_51 = QtWidgets.QLabel(self.groupBox_2)
        self.label_51.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_51.setObjectName("label_51")
        self.label_52 = QtWidgets.QLabel(self.groupBox_2)
        self.label_52.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_52.setObjectName("label_52")
        self.label_53 = QtWidgets.QLabel(self.groupBox_2)
        self.label_53.setGeometry(QtCore.QRect(180, 170, 21, 21))
        self.label_53.setObjectName("label_53")
        self.label_54 = QtWidgets.QLabel(self.groupBox_2)
        self.label_54.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_54.setObjectName("label_54")
        self.label_55 = QtWidgets.QLabel(self.groupBox_2)
        self.label_55.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_55.setObjectName("label_55")
        self.horizontalLayout_6.addWidget(self.groupBox_2)
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(750, 130, 351, 321))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.groupBox_3 = QtWidgets.QGroupBox(self.horizontalLayoutWidget_4)
        self.groupBox_3.setFlat(False)
        self.groupBox_3.setCheckable(False)
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_56 = QtWidgets.QLabel(self.groupBox_3)
        self.label_56.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_56.setObjectName("label_56")
        self.label_57 = QtWidgets.QLabel(self.groupBox_3)
        self.label_57.setGeometry(QtCore.QRect(10, 170, 181, 21))
        self.label_57.setObjectName("label_57")
        self.label_58 = QtWidgets.QLabel(self.groupBox_3)
        self.label_58.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_58.setObjectName("label_58")
        self.label_59 = QtWidgets.QLabel(self.groupBox_3)
        self.label_59.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_59.setObjectName("label_59")
        self.label_60 = QtWidgets.QLabel(self.groupBox_3)
        self.label_60.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.label_60.setObjectName("label_60")
        self.label_61 = QtWidgets.QLabel(self.groupBox_3)
        self.label_61.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_61.setObjectName("label_61")
        self.parameter1_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter1_penerimaan.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_penerimaan.setMaximum(999999999)
        self.parameter1_penerimaan.setProperty("value", 100)
        self.parameter1_penerimaan.setObjectName("parameter1_penerimaan")
        self.parameter2_penerimaan = QtWidgets.QComboBox(self.groupBox_3)
        self.parameter2_penerimaan.setGeometry(QtCore.QRect(200, 50, 121, 22))
        self.parameter2_penerimaan.setObjectName("parameter2_penerimaan")
        self.parameter2_penerimaan.addItem("")
        self.parameter2_penerimaan.addItem("")
        self.parameter3_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter3_penerimaan.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_penerimaan.setObjectName("parameter3_penerimaan")
        self.parameter4_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter4_penerimaan.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_penerimaan.setProperty("value", 2)
        self.parameter4_penerimaan.setObjectName("parameter4_penerimaan")
        self.parameter5_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter5_penerimaan.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_penerimaan.setProperty("value", 1)
        self.parameter5_penerimaan.setObjectName("parameter5_penerimaan")
        self.parameter6_penerimaan = QtWidgets.QComboBox(self.groupBox_3)
        self.parameter6_penerimaan.setGeometry(QtCore.QRect(200, 170, 121, 22))
        self.parameter6_penerimaan.setObjectName("parameter6_penerimaan")
        self.parameter6_penerimaan.addItem("")
        self.parameter6_penerimaan.addItem("")
        self.parameter6_penerimaan.addItem("")

        self.training_penerimaan = QtWidgets.QPushButton(self.groupBox_3)
        self.training_penerimaan.setGeometry(QtCore.QRect(120, 210, 93, 28))
        self.training_penerimaan.setObjectName("training_penerimaan")
        self.training_penerimaan.clicked.connect(self.parameter_training_penerimaan)

        self.label_62 = QtWidgets.QLabel(self.groupBox_3)
        self.label_62.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label_62.setObjectName("label_62")
        self.label_63 = QtWidgets.QLabel(self.groupBox_3)
        self.label_63.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_63.setObjectName("label_63")
        self.akurasi_penerimaan_latih = QtWidgets.QLabel(self.groupBox_3)
        self.akurasi_penerimaan_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_penerimaan_latih.setObjectName("akurasi_penerimaan_latih")
        self.akurasi_penerimaan_uji = QtWidgets.QLabel(self.groupBox_3)
        self.akurasi_penerimaan_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_penerimaan_uji.setObjectName("akurasi_penerimaan_uji")
        self.label_66 = QtWidgets.QLabel(self.groupBox_3)
        self.label_66.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_66.setObjectName("label_66")
        self.label_67 = QtWidgets.QLabel(self.groupBox_3)
        self.label_67.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_67.setObjectName("label_67")
        self.label_68 = QtWidgets.QLabel(self.groupBox_3)
        self.label_68.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_68.setObjectName("label_68")
        self.label_69 = QtWidgets.QLabel(self.groupBox_3)
        self.label_69.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_69.setObjectName("label_69")
        self.label_70 = QtWidgets.QLabel(self.groupBox_3)
        self.label_70.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_70.setObjectName("label_70")
        self.label_71 = QtWidgets.QLabel(self.groupBox_3)
        self.label_71.setGeometry(QtCore.QRect(180, 170, 21, 21))
        self.label_71.setObjectName("label_71")
        self.label_72 = QtWidgets.QLabel(self.groupBox_3)
        self.label_72.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_72.setObjectName("label_72")
        self.label_73 = QtWidgets.QLabel(self.groupBox_3)
        self.label_73.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_73.setObjectName("label_73")
        self.horizontalLayout_7.addWidget(self.groupBox_3)
        self.horizontalLayoutWidget_5 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_5.setGeometry(QtCore.QRect(30, 510, 160, 31))
        self.horizontalLayoutWidget_5.setObjectName("horizontalLayoutWidget_5")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_5)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_10 = QtWidgets.QLabel(self.horizontalLayoutWidget_5)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_2.addWidget(self.label_10)
        self.horizontalLayoutWidget_6 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_6.setGeometry(QtCore.QRect(200, 510, 901, 31))
        self.horizontalLayoutWidget_6.setObjectName("horizontalLayoutWidget_6")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_6)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.fileName = QtWidgets.QLabel(self.horizontalLayoutWidget_6)
        self.fileName.setText("")
        self.fileName.setObjectName("fileName")
        self.horizontalLayout_3.addWidget(self.fileName)

        self.save_semua_model = QtWidgets.QPushButton(self.centralwidget)
        self.save_semua_model.setGeometry(QtCore.QRect(500, 470, 111, 28))
        self.save_semua_model.setObjectName("save_semua_model")
        self.save_semua_model.clicked.connect(simpan_model)

        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(30, 90, 351, 31))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        
        self.jenis_model_sensasi = QtWidgets.QComboBox(self.verticalLayoutWidget)
        self.jenis_model_sensasi.setObjectName("jenis_model_sensasi")
        self.jenis_model_sensasi.addItem("")
        self.jenis_model_sensasi.addItem("")
        self.jenis_model_sensasi.activated.connect(self.update_parameter_sensasi)
        
        self.verticalLayout.addWidget(self.jenis_model_sensasi)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(390, 90, 351, 31))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        
        self.jenis_model_kenyamanan = QtWidgets.QComboBox(self.verticalLayoutWidget_2)
        self.jenis_model_kenyamanan.setObjectName("jenis_model_kenyamanan")
        self.jenis_model_kenyamanan.addItem("")
        self.jenis_model_kenyamanan.addItem("")
        self.jenis_model_kenyamanan.activated.connect(self.update_parameter_kenyamanan)
        
        
        self.verticalLayout_2.addWidget(self.jenis_model_kenyamanan)
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(750, 90, 351, 31))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        
        self.jenis_model_penerimaan = QtWidgets.QComboBox(self.verticalLayoutWidget_3)
        self.jenis_model_penerimaan.setObjectName("jenis_model_penerimaan")
        self.jenis_model_penerimaan.addItem("")
        self.jenis_model_penerimaan.addItem("")
        self.jenis_model_penerimaan.activated.connect(self.update_parameter_penerimaan)
        
        self.verticalLayout_3.addWidget(self.jenis_model_penerimaan)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1128, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionUpload_dataset = QtWidgets.QAction(MainWindow)
        self.actionUpload_dataset.setObjectName("actionUpload_dataset")
        self.actionUpload_dataset.triggered.connect(self.openFileNameDialog)

        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionExit.triggered.connect(self.exit_app)

        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.menuFile.addAction(self.actionUpload_dataset)
        self.menuFile.addAction(self.actionExit)
        self.menuAbout.addAction(self.actionHelp)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Training Model SMK"))
        self.label_2.setText(_translate("MainWindow", "Training Model Machine Learning"))
        self.groupBox.setTitle(_translate("MainWindow", "Model Sensasi"))
        self.label_8.setText(_translate("MainWindow", "Jumlah minimal sample leaf  "))
        self.label_6.setText(_translate("MainWindow", "Fitur                                    "))
        self.label_7.setText(_translate("MainWindow", "Jumlah minimal split             "))
        self.label_5.setText(_translate("MainWindow", "Max depth                           "))
        self.label_3.setText(_translate("MainWindow", "Jumlah Tree                        = "))
        self.label_4.setText(_translate("MainWindow", "Jenis Impurity                       "))
        self.parameter2_sensasi.setItemText(0, _translate("MainWindow", "Gini Impurity"))
        self.parameter2_sensasi.setItemText(1, _translate("MainWindow", "Entropy"))
        self.parameter6_sensasi.setItemText(0, _translate("MainWindow", "Auto"))
        self.parameter6_sensasi.setItemText(1, _translate("MainWindow", "Square root"))
        self.parameter6_sensasi.setItemText(2, _translate("MainWindow", "log2"))
        self.training_sensasi.setText(_translate("MainWindow", "Train"))
        self.label.setText(_translate("MainWindow", "Akurasi Data Latih                 "))
        self.label_9.setText(_translate("MainWindow", "Akurasi Data Uji                    "))
        self.akurasi_sensasi_latih.setText(_translate("MainWindow", "0"))
        self.akurasi_sensasi_uji.setText(_translate("MainWindow", "0"))
        self.label_12.setText(_translate("MainWindow", " ="))
        self.label_13.setText(_translate("MainWindow", " ="))
        self.label_14.setText(_translate("MainWindow", " ="))
        self.label_15.setText(_translate("MainWindow", " ="))
        self.label_16.setText(_translate("MainWindow", " ="))
        self.label_17.setText(_translate("MainWindow", " ="))
        self.label_18.setText(_translate("MainWindow", " ="))
        self.label_19.setText(_translate("MainWindow", " ="))

        self.groupBox_2.setTitle(_translate("MainWindow", "Model Kenyamanan"))
        self.label_38.setText(_translate("MainWindow", "Jumlah minimal sample leaf  "))
        self.label_39.setText(_translate("MainWindow", "Fitur                                    "))
        self.label_40.setText(_translate("MainWindow", "Jumlah minimal split             "))
        self.label_41.setText(_translate("MainWindow", "Max depth                           "))
        self.label_42.setText(_translate("MainWindow", "Jumlah Tree                        = "))
        self.label_43.setText(_translate("MainWindow", "Jenis Impurity                       "))
        self.parameter2_kenyamanan.setItemText(0, _translate("MainWindow", "Gini Impurity"))
        self.parameter2_kenyamanan.setItemText(1, _translate("MainWindow", "Entropy"))
        self.parameter6_kenyamanan.setItemText(0, _translate("MainWindow", "Auto"))
        self.parameter6_kenyamanan.setItemText(1, _translate("MainWindow", "Square root"))
        self.parameter6_kenyamanan.setItemText(2, _translate("MainWindow", "log2"))
        self.training_kenyamanan.setText(_translate("MainWindow", "Train"))
        self.label_44.setText(_translate("MainWindow", "Akurasi Data Latih                 "))
        self.label_45.setText(_translate("MainWindow", "Akurasi Data Uji                    "))
        self.akurasi_kenyamanan_latih.setText(_translate("MainWindow", "0"))
        self.akurasi_kenyamanan_uji.setText(_translate("MainWindow", "0"))
        self.label_48.setText(_translate("MainWindow", " ="))
        self.label_49.setText(_translate("MainWindow", " ="))
        self.label_50.setText(_translate("MainWindow", " ="))
        self.label_51.setText(_translate("MainWindow", " ="))
        self.label_52.setText(_translate("MainWindow", " ="))
        self.label_53.setText(_translate("MainWindow", " ="))
        self.label_54.setText(_translate("MainWindow", " ="))
        self.label_55.setText(_translate("MainWindow", " ="))
        
        self.groupBox_3.setTitle(_translate("MainWindow", "Model Penerimaan"))
        self.label_56.setText(_translate("MainWindow", "Jumlah minimal sample leaf  "))
        self.label_57.setText(_translate("MainWindow", "Fitur                                    "))
        self.label_58.setText(_translate("MainWindow", "Jumlah minimal split             "))
        self.label_59.setText(_translate("MainWindow", "Max depth                           "))
        self.label_60.setText(_translate("MainWindow", "Jumlah Tree                        = "))
        self.label_61.setText(_translate("MainWindow", "Jenis Impurity                       "))
        self.parameter2_penerimaan.setItemText(0, _translate("MainWindow", "Gini Impurity"))
        self.parameter2_penerimaan.setItemText(1, _translate("MainWindow", "Entropy"))
        self.parameter6_penerimaan.setItemText(0, _translate("MainWindow", "Auto"))
        self.parameter6_penerimaan.setItemText(1, _translate("MainWindow", "Square root"))
        self.parameter6_penerimaan.setItemText(2, _translate("MainWindow", "log2"))
        self.training_penerimaan.setText(_translate("MainWindow", "Train"))
        self.label_62.setText(_translate("MainWindow", "Akurasi Data Latih                 "))
        self.label_63.setText(_translate("MainWindow", "Akurasi Data Uji                    "))
        self.akurasi_penerimaan_latih.setText(_translate("MainWindow", "0"))
        self.akurasi_penerimaan_uji.setText(_translate("MainWindow", "0"))
        self.label_66.setText(_translate("MainWindow", " ="))
        self.label_67.setText(_translate("MainWindow", " ="))
        self.label_68.setText(_translate("MainWindow", " ="))
        self.label_69.setText(_translate("MainWindow", " ="))
        self.label_70.setText(_translate("MainWindow", " ="))
        self.label_71.setText(_translate("MainWindow", " ="))
        self.label_72.setText(_translate("MainWindow", " ="))
        self.label_73.setText(_translate("MainWindow", " ="))

        self.label_10.setText(_translate("MainWindow", "Dataset Training"))
        self.save_semua_model.setText(_translate("MainWindow", "Save All Models"))
        self.jenis_model_sensasi.setItemText(0, _translate("MainWindow", "Random Forest"))
        self.jenis_model_sensasi.setItemText(1, _translate("MainWindow", "Artificial Neural Network"))
        self.jenis_model_kenyamanan.setItemText(0, _translate("MainWindow", "Random Forest"))
        self.jenis_model_kenyamanan.setItemText(1, _translate("MainWindow", "Artificial Neural Network"))
        self.jenis_model_penerimaan.setItemText(0, _translate("MainWindow", "Random Forest"))
        self.jenis_model_penerimaan.setItemText(1, _translate("MainWindow", "Artificial Neural Network"))
        self.menuFile.setTitle( "File")
        self.menuAbout.setTitle("About")
        self.actionUpload_dataset.setText("Upload dataset")
        self.actionExit.setText("Exit")
        self.actionHelp.setText( "Help")

    def update_parameter_sensasi(self, index):
        global ml_sensasi
        ml_sensasi = self.jenis_model_sensasi.itemText(index)
        #print(ml_sensasi)
        if ml_sensasi == 'Random Forest':
            print('masuk rf')
            self.parameter_rf_sensasi()
        elif ml_sensasi == 'Artificial Neural Network':
            print('masuk ann')
            self.parameter_ann_sensasi()
    
    def update_parameter_kenyamanan(self,index):
        global ml_kenyamanan
        ml_kenyamanan = self.jenis_model_kenyamanan.itemText(index)
        print(ml_kenyamanan)
        if ml_kenyamanan == 'Random Forest':
            print('masuk rf')
            self.parameter_rf_kenyamanan()
        elif ml_kenyamanan == 'Artificial Neural Network':
            print('masuk ann')
            self.parameter_ann_kenyamanan()
    
    def update_parameter_penerimaan(self,index):
        global ml_penerimaan
        ml_penerimaan = self.jenis_model_penerimaan.itemText(index)
        print(ml_penerimaan)
        if ml_penerimaan == 'Random Forest':
            print('masuk rf')
            self.parameter_rf_penerimaan()
        elif ml_penerimaan == 'Artificial Neural Network':
            print('masuk ann')
            self.parameter_ann_penerimaan()

    def parameter_rf_sensasi(self):
        self.horizontalLayout_4.removeWidget(self.groupBox)
        self.groupBox.deleteLater()
        sip.delete(self.groupBox)

        self.groupBox = QtWidgets.QGroupBox(self.horizontalLayoutWidget_2)
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_8.setObjectName("label_8")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(10, 170, 181, 21))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_7.setObjectName("label_7")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_5.setObjectName("label_5")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_4.setObjectName("label_4")
        self.parameter1_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter1_sensasi.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_sensasi.setMaximum(999999999)
        self.parameter1_sensasi.setProperty("value", 100)
        self.parameter1_sensasi.setObjectName("parameter1_sensasi")
        self.parameter2_sensasi = QtWidgets.QComboBox(self.groupBox)
        self.parameter2_sensasi.setGeometry(QtCore.QRect(200, 50, 121, 22))
        self.parameter2_sensasi.setObjectName("parameter2_sensasi")
        self.parameter2_sensasi.addItem("")
        self.parameter2_sensasi.addItem("")
        self.parameter3_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter3_sensasi.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_sensasi.setObjectName("parameter3_sensasi")
        self.parameter4_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter4_sensasi.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_sensasi.setProperty("value", 2)
        self.parameter4_sensasi.setObjectName("parameter4_sensasi")
        self.parameter5_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter5_sensasi.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_sensasi.setProperty("value", 1)
        self.parameter5_sensasi.setObjectName("parameter5_sensasi")
        self.parameter6_sensasi = QtWidgets.QComboBox(self.groupBox)
        self.parameter6_sensasi.setGeometry(QtCore.QRect(200, 170, 121, 22))
        self.parameter6_sensasi.setObjectName("parameter6_sensasi")
        self.parameter6_sensasi.addItem("")
        self.parameter6_sensasi.addItem("")
        self.parameter6_sensasi.addItem("")

        self.training_sensasi = QtWidgets.QPushButton(self.groupBox)
        self.training_sensasi.setGeometry(QtCore.QRect(120, 210, 93, 28))
        self.training_sensasi.setObjectName("training_sensasi")
        self.training_sensasi.clicked.connect(self.parameter_training_sensasi)

        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label.setObjectName("label")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_9.setObjectName("label_9")
        self.akurasi_sensasi_latih = QtWidgets.QLabel(self.groupBox)
        self.akurasi_sensasi_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_sensasi_latih.setObjectName("akurasi_sensasi_latih")
        self.akurasi_sensasi_uji = QtWidgets.QLabel(self.groupBox)
        self.akurasi_sensasi_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_sensasi_uji.setObjectName("akurasi_sensasi_uji")
        self.label_12 = QtWidgets.QLabel(self.groupBox)
        self.label_12.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.groupBox)
        self.label_13.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox)
        self.label_14.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.groupBox)
        self.label_15.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.groupBox)
        self.label_16.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.groupBox)
        self.label_17.setGeometry(QtCore.QRect(180, 170, 21, 21))
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.groupBox)
        self.label_18.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.groupBox)
        self.label_19.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_19.setObjectName("label_19")
        self.horizontalLayout_4.addWidget(self.groupBox)
        

        self.groupBox.setTitle("Model Sensasi")
        self.label_8.setText( "Jumlah minimal sample leaf  ")
        self.label_6.setText( "Fitur                                    ")
        self.label_7.setText( "Jumlah minimal split             ")
        self.label_5.setText( "Max depth                           ")
        self.label_3.setText( "Jumlah Tree                        = ")
        self.label_4.setText( "Jenis Impurity                       ")
        self.parameter2_sensasi.setItemText(0,  "Gini Impurity")
        self.parameter2_sensasi.setItemText(1,  "Entropy")
        self.parameter6_sensasi.setItemText(0,  "Auto")
        self.parameter6_sensasi.setItemText(1,  "Square root")
        self.parameter6_sensasi.setItemText(2,  "log2")
        self.training_sensasi.setText( "Train")
        self.label.setText( "Akurasi Data Latih                 ")
        self.label_9.setText( "Akurasi Data Uji                    ")
        self.akurasi_sensasi_latih.setText( "0")
        self.akurasi_sensasi_uji.setText( "0")
        self.label_12.setText( " =")
        self.label_13.setText( " =")
        self.label_14.setText( " =")
        self.label_15.setText( " =")
        self.label_16.setText( " =")
        self.label_17.setText( " =")
        self.label_18.setText( " =")
        self.label_19.setText( " =")

    def parameter_ann_sensasi(self):
        self.horizontalLayout_4.removeWidget(self.groupBox)
        self.groupBox.deleteLater()

        sip.delete(self.groupBox)


        self.groupBox = QtWidgets.QGroupBox(self.horizontalLayoutWidget_2)
        self.groupBox.setFlat(False)
        self.groupBox.setCheckable(False)
        self.groupBox.setObjectName("groupBox")
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_8.setObjectName("label_8")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(10, 170, 181, 21))
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_7.setObjectName("label_7")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_5.setObjectName("label_5")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(10, 20, 111, 21))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_4.setObjectName("label_4")

        self.training_sensasi = QtWidgets.QPushButton(self.groupBox)
        self.training_sensasi.setGeometry(QtCore.QRect(120, 190, 93, 28))
        self.training_sensasi.setObjectName("training_sensasi")
        self.training_sensasi.clicked.connect(self.parameter_training_sensasi)

        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label.setObjectName("label")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_9.setObjectName("label_9")
        self.akurasi_sensasi_latih = QtWidgets.QLabel(self.groupBox)
        self.akurasi_sensasi_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_sensasi_latih.setObjectName("akurasi_sensasi_latih")
        self.akurasi_sensasi_uji = QtWidgets.QLabel(self.groupBox)
        self.akurasi_sensasi_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_sensasi_uji.setObjectName("akurasi_sensasi_uji")
        self.label_12 = QtWidgets.QLabel(self.groupBox)
        self.label_12.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.groupBox)
        self.label_13.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox)
        self.label_14.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.groupBox)
        self.label_15.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.groupBox)
        self.label_16.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_16.setObjectName("label_16")
        self.label_18 = QtWidgets.QLabel(self.groupBox)
        self.label_18.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.groupBox)
        self.label_19.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_19.setObjectName("label_19")
        self.parameter1_sensasi = QtWidgets.QLineEdit(self.groupBox)
        self.parameter1_sensasi.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_sensasi.setText("100")
        self.parameter1_sensasi.setObjectName("parameter1_sensasi")
        self.parameter2_sensasi = QtWidgets.QSpinBox(self.groupBox)
        self.parameter2_sensasi.setGeometry(QtCore.QRect(200, 50, 121, 21))
        self.parameter2_sensasi.setMaximum(999999999)
        self.parameter2_sensasi.setProperty("value", 200)
        self.parameter2_sensasi.setDisplayIntegerBase(10)
        self.parameter2_sensasi.setObjectName("parameter2_sensasi")
        self.parameter3_sensasi = QtWidgets.QComboBox(self.groupBox)
        self.parameter3_sensasi.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_sensasi.setObjectName("parameter3_sensasi")
        self.parameter3_sensasi.addItem("")
        self.parameter3_sensasi.addItem("")
        self.parameter3_sensasi.addItem("")
        self.parameter3_sensasi.addItem("")
        self.parameter4_sensasi = QtWidgets.QComboBox(self.groupBox)
        self.parameter4_sensasi.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_sensasi.setObjectName("parameter4_sensasi")
        self.parameter4_sensasi.addItem("")
        self.parameter4_sensasi.addItem("")
        self.parameter4_sensasi.addItem("")
        self.parameter5_sensasi = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.parameter5_sensasi.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_sensasi.setDecimals(3)
        self.parameter5_sensasi.setProperty("value", 0.001)
        self.parameter5_sensasi.setObjectName("parameter5_sensasi")
        self.horizontalLayout_4.addWidget(self.groupBox)
        

        self.groupBox.setTitle("Model Sensasi")
        self.label_8.setText("Initial Learning Rate")
        self.label_7.setText("Solver")
        self.label_5.setText("Fungsi Aktivasi")
        self.label_3.setText("Hidden Layer Size")
        self.label_4.setText("Max Iterasi")
        self.training_sensasi.setText("Train")
        self.label.setText("Akurasi Data Latih")
        self.label_9.setText("Akurasi Data Uji")
        self.akurasi_sensasi_latih.setText("0")
        self.akurasi_sensasi_uji.setText("0")
        self.label_12.setText(" =")
        self.label_13.setText(" =")
        self.label_14.setText(" =")
        self.label_15.setText(" =")
        self.label_16.setText(" =")
        self.label_18.setText(" =")
        self.label_19.setText(" =")
        self.parameter3_sensasi.setItemText(0,"ReLu")
        self.parameter3_sensasi.setItemText(1,"Logistic/Sigmoid")
        self.parameter3_sensasi.setItemText(2,"Tanh")
        self.parameter3_sensasi.setItemText(3,"Identity")
        self.parameter4_sensasi.setItemText(0,"Stochastic G. Opt.")
        self.parameter4_sensasi.setItemText(1,"Stochastic G. D.")
        self.parameter4_sensasi.setItemText(2,"Quasi-Newton")
    
    def parameter_rf_kenyamanan(self):
        self.horizontalLayout_6.removeWidget(self.groupBox_2)
        self.groupBox_2.deleteLater()
        sip.delete(self.groupBox_2)

        self.groupBox_2 = QtWidgets.QGroupBox(self.horizontalLayoutWidget_3)
        self.groupBox_2.setFlat(False)
        self.groupBox_2.setCheckable(False)
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_38 = QtWidgets.QLabel(self.groupBox_2)
        self.label_38.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_38.setObjectName("label_38")
        self.label_39 = QtWidgets.QLabel(self.groupBox_2)
        self.label_39.setGeometry(QtCore.QRect(10, 170, 181, 21))
        self.label_39.setObjectName("label_39")
        self.label_40 = QtWidgets.QLabel(self.groupBox_2)
        self.label_40.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_40.setObjectName("label_40")
        self.label_41 = QtWidgets.QLabel(self.groupBox_2)
        self.label_41.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_41.setObjectName("label_41")
        self.label_42 = QtWidgets.QLabel(self.groupBox_2)
        self.label_42.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.label_42.setObjectName("label_42")
        self.label_43 = QtWidgets.QLabel(self.groupBox_2)
        self.label_43.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_43.setObjectName("label_43")
        self.parameter1_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter1_kenyamanan.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_kenyamanan.setMaximum(999999999)
        self.parameter1_kenyamanan.setProperty("value", 100)
        self.parameter1_kenyamanan.setObjectName("parameter1_kenyamanan")
        self.parameter2_kenyamanan = QtWidgets.QComboBox(self.groupBox_2)
        self.parameter2_kenyamanan.setGeometry(QtCore.QRect(200, 50, 121, 22))
        self.parameter2_kenyamanan.setObjectName("parameter2_kenyamanan")
        self.parameter2_kenyamanan.addItem("")
        self.parameter2_kenyamanan.addItem("")
        self.parameter3_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter3_kenyamanan.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_kenyamanan.setObjectName("parameter3_kenyamanan")
        self.parameter4_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter4_kenyamanan.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_kenyamanan.setProperty("value", 2)
        self.parameter4_kenyamanan.setObjectName("parameter4_kenyamanan")
        self.parameter5_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter5_kenyamanan.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_kenyamanan.setProperty("value", 1)
        self.parameter5_kenyamanan.setObjectName("parameter5_kenyamanan")
        self.parameter6_kenyamanan = QtWidgets.QComboBox(self.groupBox_2)
        self.parameter6_kenyamanan.setGeometry(QtCore.QRect(200, 170, 121, 22))
        self.parameter6_kenyamanan.setObjectName("parameter6_kenyamanan")
        self.parameter6_kenyamanan.addItem("")
        self.parameter6_kenyamanan.addItem("")
        self.parameter6_kenyamanan.addItem("")

        self.training_kenyamanan = QtWidgets.QPushButton(self.groupBox_2)
        self.training_kenyamanan.setGeometry(QtCore.QRect(120, 210, 93, 28))
        self.training_kenyamanan.setObjectName("training_kenyamanan")
        self.training_kenyamanan.clicked.connect(self.parameter_training_kenyamanan)

        self.label_44 = QtWidgets.QLabel(self.groupBox_2)
        self.label_44.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label_44.setObjectName("label_44")
        self.label_45 = QtWidgets.QLabel(self.groupBox_2)
        self.label_45.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_45.setObjectName("label_45")
        self.akurasi_kenyamanan_latih = QtWidgets.QLabel(self.groupBox_2)
        self.akurasi_kenyamanan_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_kenyamanan_latih.setObjectName("akurasi_kenyamanan_latih")
        self.akurasi_kenyamanan_uji = QtWidgets.QLabel(self.groupBox_2)
        self.akurasi_kenyamanan_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_kenyamanan_uji.setObjectName("akurasi_kenyamanan_uji")
        self.label_48 = QtWidgets.QLabel(self.groupBox_2)
        self.label_48.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_48.setObjectName("label_48")
        self.label_49 = QtWidgets.QLabel(self.groupBox_2)
        self.label_49.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_49.setObjectName("label_49")
        self.label_50 = QtWidgets.QLabel(self.groupBox_2)
        self.label_50.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_50.setObjectName("label_50")
        self.label_51 = QtWidgets.QLabel(self.groupBox_2)
        self.label_51.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_51.setObjectName("label_51")
        self.label_52 = QtWidgets.QLabel(self.groupBox_2)
        self.label_52.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_52.setObjectName("label_52")
        self.label_53 = QtWidgets.QLabel(self.groupBox_2)
        self.label_53.setGeometry(QtCore.QRect(180, 170, 21, 21))
        self.label_53.setObjectName("label_53")
        self.label_54 = QtWidgets.QLabel(self.groupBox_2)
        self.label_54.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_54.setObjectName("label_54")
        self.label_55 = QtWidgets.QLabel(self.groupBox_2)
        self.label_55.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_55.setObjectName("label_55")
        self.horizontalLayout_6.addWidget(self.groupBox_2)

        self.groupBox_2.setTitle( "Model Kenyamanan")
        self.label_38.setText( "Jumlah minimal sample leaf  ")
        self.label_39.setText( "Fitur                                    ")
        self.label_40.setText( "Jumlah minimal split             ")
        self.label_41.setText( "Max depth                           ")
        self.label_42.setText( "Jumlah Tree                        = ")
        self.label_43.setText( "Jenis Impurity                       ")
        self.parameter2_kenyamanan.setItemText(0,  "Gini Impurity")
        self.parameter2_kenyamanan.setItemText(1,  "Entropy")
        self.parameter6_kenyamanan.setItemText(0,  "Auto")
        self.parameter6_kenyamanan.setItemText(1,  "Square root")
        self.parameter6_kenyamanan.setItemText(2,  "log2")
        self.training_kenyamanan.setText( "Train")
        self.label_44.setText( "Akurasi Data Latih                 ")
        self.label_45.setText( "Akurasi Data Uji                    ")
        self.akurasi_kenyamanan_latih.setText( "0")
        self.akurasi_kenyamanan_uji.setText( "0")
        self.label_48.setText( " =")
        self.label_49.setText( " =")
        self.label_50.setText( " =")
        self.label_51.setText( " =")
        self.label_52.setText( " =")
        self.label_53.setText( " =")
        self.label_54.setText( " =")
        self.label_55.setText( " =")
        
    def parameter_ann_kenyamanan(self):
        self.horizontalLayout_6.removeWidget(self.groupBox_2)
        self.groupBox_2.deleteLater()
        sip.delete(self.groupBox_2)

        self.groupBox_2 = QtWidgets.QGroupBox(self.horizontalLayoutWidget_3)
        self.groupBox_2.setFlat(False)
        self.groupBox_2.setCheckable(False)
        self.groupBox_2.setObjectName("groupBox_2")

        self.training_kenyamanan = QtWidgets.QPushButton(self.groupBox_2)
        self.training_kenyamanan.setGeometry(QtCore.QRect(120, 190, 93, 28))
        self.training_kenyamanan.setObjectName("training_kenyamanan")
        self.training_kenyamanan.clicked.connect(self.parameter_training_kenyamanan)

        self.label_44 = QtWidgets.QLabel(self.groupBox_2)
        self.label_44.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label_44.setObjectName("label_44")
        self.label_45 = QtWidgets.QLabel(self.groupBox_2)
        self.label_45.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_45.setObjectName("label_45")
        self.akurasi_kenyamanan_latih = QtWidgets.QLabel(self.groupBox_2)
        self.akurasi_kenyamanan_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_kenyamanan_latih.setObjectName("akurasi_kenyamanan_latih")
        self.akurasi_kenyamanan_uji = QtWidgets.QLabel(self.groupBox_2)
        self.akurasi_kenyamanan_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_kenyamanan_uji.setObjectName("akurasi_kenyamanan_uji")
        self.label_48 = QtWidgets.QLabel(self.groupBox_2)
        self.label_48.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_48.setObjectName("label_48")
        self.label_49 = QtWidgets.QLabel(self.groupBox_2)
        self.label_49.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_49.setObjectName("label_49")
        self.label_50 = QtWidgets.QLabel(self.groupBox_2)
        self.label_50.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_50.setObjectName("label_50")
        self.label_51 = QtWidgets.QLabel(self.groupBox_2)
        self.label_51.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_51.setObjectName("label_51")
        self.label_52 = QtWidgets.QLabel(self.groupBox_2)
        self.label_52.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_52.setObjectName("label_52")
        self.label_54 = QtWidgets.QLabel(self.groupBox_2)
        self.label_54.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_54.setObjectName("label_54")
        self.label_55 = QtWidgets.QLabel(self.groupBox_2)
        self.label_55.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_55.setObjectName("label_55")
        self.label_21 = QtWidgets.QLabel(self.groupBox_2)
        self.label_21.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_21.setObjectName("label_21")
        self.label_11 = QtWidgets.QLabel(self.groupBox_2)
        self.label_11.setGeometry(QtCore.QRect(10, 20, 111, 21))
        self.label_11.setObjectName("label_11")
        self.label_22 = QtWidgets.QLabel(self.groupBox_2)
        self.label_22.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_22.setObjectName("label_22")
        self.label_20 = QtWidgets.QLabel(self.groupBox_2)
        self.label_20.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_20.setObjectName("label_20")
        self.label_17 = QtWidgets.QLabel(self.groupBox_2)
        self.label_17.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_17.setObjectName("label_17")
        self.parameter2_kenyamanan = QtWidgets.QSpinBox(self.groupBox_2)
        self.parameter2_kenyamanan.setGeometry(QtCore.QRect(200, 50, 121, 21))
        self.parameter2_kenyamanan.setMaximum(999999999)
        self.parameter2_kenyamanan.setProperty("value", 200)
        self.parameter2_kenyamanan.setObjectName("parameter2_kenyamanan")
        self.parameter3_kenyamanan = QtWidgets.QComboBox(self.groupBox_2)
        self.parameter3_kenyamanan.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_kenyamanan.setObjectName("parameter3_kenyamanan")
        self.parameter3_kenyamanan.addItem("")
        self.parameter3_kenyamanan.addItem("")
        self.parameter3_kenyamanan.addItem("")
        self.parameter3_kenyamanan.addItem("")
        self.parameter1_kenyamanan = QtWidgets.QLineEdit(self.groupBox_2)
        self.parameter1_kenyamanan.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_kenyamanan.setObjectName("parameter1_kenyamanan")
        self.parameter5_kenyamanan = QtWidgets.QDoubleSpinBox(self.groupBox_2)
        self.parameter5_kenyamanan.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_kenyamanan.setDecimals(3)
        self.parameter5_kenyamanan.setProperty("value", 0.001)
        self.parameter5_kenyamanan.setObjectName("parameter5_kenyamanan")
        self.parameter4_kenyamanan = QtWidgets.QComboBox(self.groupBox_2)
        self.parameter4_kenyamanan.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_kenyamanan.setObjectName("parameter4_kenyamanan")
        self.parameter4_kenyamanan.addItem("")
        self.parameter4_kenyamanan.addItem("")
        self.parameter4_kenyamanan.addItem("")
        self.horizontalLayout_6.addWidget(self.groupBox_2)

        self.groupBox_2.setTitle(  "Model Kenyamanan")
        self.training_kenyamanan.setText(  "Train")
        self.label_44.setText(  "Akurasi Data Latih                 ")
        self.label_45.setText(  "Akurasi Data Uji                    ")
        self.akurasi_kenyamanan_latih.setText(  "0")
        self.akurasi_kenyamanan_uji.setText(  "0")
        self.label_48.setText(  " =")
        self.label_49.setText(  " =")
        self.label_50.setText(  " =")
        self.label_51.setText(  " =")
        self.label_52.setText(  " =")
        self.label_54.setText(  " =")
        self.label_55.setText(  " =")
        self.label_21.setText(  "Solver         ")
        self.label_11.setText(  "Hidden Layer Size")
        self.label_22.setText(  "Max Iterasi                     ")
        self.label_20.setText(  "Fungsi Aktivasi                       ")
        self.label_17.setText(  "Initial Learning Rate")
        self.parameter3_kenyamanan.setItemText(0,   "ReLu")
        self.parameter3_kenyamanan.setItemText(1,   "Logistic/Sigmoid")
        self.parameter3_kenyamanan.setItemText(2,   "Tanh")
        self.parameter3_kenyamanan.setItemText(3,   "Identity")
        self.parameter1_kenyamanan.setText(  "100")
        self.parameter4_kenyamanan.setItemText(0,   "Stochastic G. Opt.")
        self.parameter4_kenyamanan.setItemText(1,   "Stochastic G. D.")
        self.parameter4_kenyamanan.setItemText(2,   "Quasi-Newton")

    def parameter_rf_penerimaan(self):
        self.horizontalLayout_7.removeWidget(self.groupBox_3)
        self.groupBox_3.deleteLater()
        sip.delete(self.groupBox_3)

        self.groupBox_3 = QtWidgets.QGroupBox(self.horizontalLayoutWidget_4)
        self.groupBox_3.setFlat(False)
        self.groupBox_3.setCheckable(False)
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_56 = QtWidgets.QLabel(self.groupBox_3)
        self.label_56.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_56.setObjectName("label_56")
        self.label_57 = QtWidgets.QLabel(self.groupBox_3)
        self.label_57.setGeometry(QtCore.QRect(10, 170, 181, 21))
        self.label_57.setObjectName("label_57")
        self.label_58 = QtWidgets.QLabel(self.groupBox_3)
        self.label_58.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_58.setObjectName("label_58")
        self.label_59 = QtWidgets.QLabel(self.groupBox_3)
        self.label_59.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_59.setObjectName("label_59")
        self.label_60 = QtWidgets.QLabel(self.groupBox_3)
        self.label_60.setGeometry(QtCore.QRect(10, 20, 81, 21))
        self.label_60.setObjectName("label_60")
        self.label_61 = QtWidgets.QLabel(self.groupBox_3)
        self.label_61.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_61.setObjectName("label_61")
        self.parameter1_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter1_penerimaan.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_penerimaan.setMaximum(999999999)
        self.parameter1_penerimaan.setProperty("value", 100)
        self.parameter1_penerimaan.setObjectName("parameter1_penerimaan")
        self.parameter2_penerimaan = QtWidgets.QComboBox(self.groupBox_3)
        self.parameter2_penerimaan.setGeometry(QtCore.QRect(200, 50, 121, 22))
        self.parameter2_penerimaan.setObjectName("parameter2_penerimaan")
        self.parameter2_penerimaan.addItem("")
        self.parameter2_penerimaan.addItem("")
        self.parameter3_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter3_penerimaan.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_penerimaan.setObjectName("parameter3_penerimaan")
        self.parameter4_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter4_penerimaan.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_penerimaan.setProperty("value", 2)
        self.parameter4_penerimaan.setObjectName("parameter4_penerimaan")
        self.parameter5_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter5_penerimaan.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_penerimaan.setProperty("value", 1)
        self.parameter5_penerimaan.setObjectName("parameter5_penerimaan")
        self.parameter6_penerimaan = QtWidgets.QComboBox(self.groupBox_3)
        self.parameter6_penerimaan.setGeometry(QtCore.QRect(200, 170, 121, 22))
        self.parameter6_penerimaan.setObjectName("parameter6_penerimaan")
        self.parameter6_penerimaan.addItem("")
        self.parameter6_penerimaan.addItem("")
        self.parameter6_penerimaan.addItem("")

        self.training_penerimaan = QtWidgets.QPushButton(self.groupBox_3)
        self.training_penerimaan.setGeometry(QtCore.QRect(120, 210, 93, 28))
        self.training_penerimaan.setObjectName("training_penerimaan")
        self.training_penerimaan.clicked.connect(self.parameter_training_penerimaan)

        self.label_62 = QtWidgets.QLabel(self.groupBox_3)
        self.label_62.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label_62.setObjectName("label_62")
        self.label_63 = QtWidgets.QLabel(self.groupBox_3)
        self.label_63.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_63.setObjectName("label_63")
        self.akurasi_penerimaan_latih = QtWidgets.QLabel(self.groupBox_3)
        self.akurasi_penerimaan_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_penerimaan_latih.setObjectName("akurasi_penerimaan_latih")
        self.akurasi_penerimaan_uji = QtWidgets.QLabel(self.groupBox_3)
        self.akurasi_penerimaan_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_penerimaan_uji.setObjectName("akurasi_penerimaan_uji")
        self.label_66 = QtWidgets.QLabel(self.groupBox_3)
        self.label_66.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_66.setObjectName("label_66")
        self.label_67 = QtWidgets.QLabel(self.groupBox_3)
        self.label_67.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_67.setObjectName("label_67")
        self.label_68 = QtWidgets.QLabel(self.groupBox_3)
        self.label_68.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_68.setObjectName("label_68")
        self.label_69 = QtWidgets.QLabel(self.groupBox_3)
        self.label_69.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_69.setObjectName("label_69")
        self.label_70 = QtWidgets.QLabel(self.groupBox_3)
        self.label_70.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_70.setObjectName("label_70")
        self.label_71 = QtWidgets.QLabel(self.groupBox_3)
        self.label_71.setGeometry(QtCore.QRect(180, 170, 21, 21))
        self.label_71.setObjectName("label_71")
        self.label_72 = QtWidgets.QLabel(self.groupBox_3)
        self.label_72.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_72.setObjectName("label_72")
        self.label_73 = QtWidgets.QLabel(self.groupBox_3)
        self.label_73.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_73.setObjectName("label_73")
        self.horizontalLayout_7.addWidget(self.groupBox_3)

        self.groupBox_3.setTitle( "Model Penerimaan")
        self.label_56.setText( "Jumlah minimal sample leaf  ")
        self.label_57.setText( "Fitur                                    ")
        self.label_58.setText( "Jumlah minimal split             ")
        self.label_59.setText( "Max depth                           ")
        self.label_60.setText( "Jumlah Tree                        = ")
        self.label_61.setText( "Jenis Impurity                       ")
        self.parameter2_penerimaan.setItemText(0,  "Gini Impurity")
        self.parameter2_penerimaan.setItemText(1,  "Entropy")
        self.parameter6_penerimaan.setItemText(0,  "Auto")
        self.parameter6_penerimaan.setItemText(1,  "Square root")
        self.parameter6_penerimaan.setItemText(2,  "log2")
        self.training_penerimaan.setText( "Train")
        self.label_62.setText( "Akurasi Data Latih                 ")
        self.label_63.setText( "Akurasi Data Uji                    ")
        self.akurasi_penerimaan_latih.setText( "0")
        self.akurasi_penerimaan_uji.setText( "0")
        self.label_66.setText( " =")
        self.label_67.setText( " =")
        self.label_68.setText( " =")
        self.label_69.setText( " =")
        self.label_70.setText( " =")
        self.label_71.setText( " =")
        self.label_72.setText( " =")
        self.label_73.setText( " =")

    def parameter_ann_penerimaan(self):
        self.horizontalLayout_7.removeWidget(self.groupBox_3)
        self.groupBox_3.deleteLater()
        sip.delete(self.groupBox_3)


        self.groupBox_3 = QtWidgets.QGroupBox(self.horizontalLayoutWidget_4)
        self.groupBox_3.setFlat(False)
        self.groupBox_3.setCheckable(False)
        self.groupBox_3.setObjectName("groupBox_3")

        self.training_penerimaan = QtWidgets.QPushButton(self.groupBox_3)
        self.training_penerimaan.setGeometry(QtCore.QRect(120, 190, 93, 28))
        self.training_penerimaan.setObjectName("training_penerimaan")
        self.training_penerimaan.clicked.connect(self.parameter_training_penerimaan)

        self.label_62 = QtWidgets.QLabel(self.groupBox_3)
        self.label_62.setGeometry(QtCore.QRect(10, 250, 191, 21))
        self.label_62.setObjectName("label_62")
        self.label_63 = QtWidgets.QLabel(self.groupBox_3)
        self.label_63.setGeometry(QtCore.QRect(10, 280, 191, 21))
        self.label_63.setObjectName("label_63")
        self.akurasi_penerimaan_latih = QtWidgets.QLabel(self.groupBox_3)
        self.akurasi_penerimaan_latih.setGeometry(QtCore.QRect(200, 250, 121, 21))
        self.akurasi_penerimaan_latih.setObjectName("akurasi_penerimaan_latih")
        self.akurasi_penerimaan_uji = QtWidgets.QLabel(self.groupBox_3)
        self.akurasi_penerimaan_uji.setGeometry(QtCore.QRect(200, 280, 121, 21))
        self.akurasi_penerimaan_uji.setObjectName("akurasi_penerimaan_uji")
        self.label_66 = QtWidgets.QLabel(self.groupBox_3)
        self.label_66.setGeometry(QtCore.QRect(180, 20, 21, 21))
        self.label_66.setObjectName("label_66")
        self.label_67 = QtWidgets.QLabel(self.groupBox_3)
        self.label_67.setGeometry(QtCore.QRect(180, 50, 21, 21))
        self.label_67.setObjectName("label_67")
        self.label_68 = QtWidgets.QLabel(self.groupBox_3)
        self.label_68.setGeometry(QtCore.QRect(180, 80, 21, 21))
        self.label_68.setObjectName("label_68")
        self.label_69 = QtWidgets.QLabel(self.groupBox_3)
        self.label_69.setGeometry(QtCore.QRect(180, 110, 21, 21))
        self.label_69.setObjectName("label_69")
        self.label_70 = QtWidgets.QLabel(self.groupBox_3)
        self.label_70.setGeometry(QtCore.QRect(180, 140, 21, 21))
        self.label_70.setObjectName("label_70")
        self.label_72 = QtWidgets.QLabel(self.groupBox_3)
        self.label_72.setGeometry(QtCore.QRect(180, 250, 21, 21))
        self.label_72.setObjectName("label_72")
        self.label_73 = QtWidgets.QLabel(self.groupBox_3)
        self.label_73.setGeometry(QtCore.QRect(180, 280, 21, 21))
        self.label_73.setObjectName("label_73")
        self.parameter4_penerimaan = QtWidgets.QComboBox(self.groupBox_3)
        self.parameter4_penerimaan.setGeometry(QtCore.QRect(200, 110, 121, 22))
        self.parameter4_penerimaan.setObjectName("parameter4_penerimaan")
        self.parameter4_penerimaan.addItem("")
        self.parameter4_penerimaan.addItem("")
        self.parameter4_penerimaan.addItem("")
        self.label_24 = QtWidgets.QLabel(self.groupBox_3)
        self.label_24.setGeometry(QtCore.QRect(10, 20, 111, 21))
        self.label_24.setObjectName("label_24")
        self.parameter1_penerimaan = QtWidgets.QLineEdit(self.groupBox_3)
        self.parameter1_penerimaan.setGeometry(QtCore.QRect(200, 20, 121, 22))
        self.parameter1_penerimaan.setObjectName("parameter1_penerimaan")
        self.parameter5_penerimaan = QtWidgets.QDoubleSpinBox(self.groupBox_3)
        self.parameter5_penerimaan.setGeometry(QtCore.QRect(200, 140, 121, 22))
        self.parameter5_penerimaan.setDecimals(3)
        self.parameter5_penerimaan.setProperty("value", 0.001)
        self.parameter5_penerimaan.setObjectName("parameter5_penerimaan")
        self.parameter3_penerimaan = QtWidgets.QComboBox(self.groupBox_3)
        self.parameter3_penerimaan.setGeometry(QtCore.QRect(200, 80, 121, 22))
        self.parameter3_penerimaan.setObjectName("parameter3_penerimaan")
        self.parameter3_penerimaan.addItem("")
        self.parameter3_penerimaan.addItem("")
        self.parameter3_penerimaan.addItem("")
        self.parameter3_penerimaan.addItem("")
        self.label_26 = QtWidgets.QLabel(self.groupBox_3)
        self.label_26.setGeometry(QtCore.QRect(10, 80, 181, 20))
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.groupBox_3)
        self.label_27.setGeometry(QtCore.QRect(10, 140, 181, 21))
        self.label_27.setObjectName("label_27")
        self.label_25 = QtWidgets.QLabel(self.groupBox_3)
        self.label_25.setGeometry(QtCore.QRect(10, 50, 181, 21))
        self.label_25.setObjectName("label_25")
        self.label_23 = QtWidgets.QLabel(self.groupBox_3)
        self.label_23.setGeometry(QtCore.QRect(10, 110, 181, 21))
        self.label_23.setObjectName("label_23")
        self.parameter2_penerimaan = QtWidgets.QSpinBox(self.groupBox_3)
        self.parameter2_penerimaan.setGeometry(QtCore.QRect(200, 50, 121, 21))
        self.parameter2_penerimaan.setMaximum(999999999)
        self.parameter2_penerimaan.setProperty("value", 200)
        self.parameter2_penerimaan.setObjectName("parameter2_penerimaan")
        self.horizontalLayout_7.addWidget(self.groupBox_3)

        self.groupBox_3.setTitle( "Model Penerimaan")
        self.training_penerimaan.setText( "Train")
        self.label_62.setText( "Akurasi Data Latih                 ")
        self.label_63.setText( "Akurasi Data Uji                    ")
        self.akurasi_penerimaan_latih.setText( "0")
        self.akurasi_penerimaan_uji.setText( "0")
        self.label_66.setText( " =")
        self.label_67.setText( " =")
        self.label_68.setText( " =")
        self.label_69.setText( " =")
        self.label_70.setText( " =")
        self.label_72.setText( " =")
        self.label_73.setText( " =")
        self.parameter4_penerimaan.setItemText(0,  "Stochastic G. Opt.")
        self.parameter4_penerimaan.setItemText(1,  "Stochastic G. D.")
        self.parameter4_penerimaan.setItemText(2,  "Quasi-Newton")
        self.label_24.setText( "Hidden Layer Size")
        self.parameter1_penerimaan.setText( "100")
        self.parameter3_penerimaan.setItemText(0,  "ReLu")
        self.parameter3_penerimaan.setItemText(1,  "Logistic/Sigmoid")
        self.parameter3_penerimaan.setItemText(2,  "Tanh")
        self.parameter3_penerimaan.setItemText(3,  "Identity")
        self.label_26.setText( "Fungsi Aktivasi                       ")
        self.label_27.setText( "Initial Learning Rate")
        self.label_25.setText( "Max Iterasi                     ")
        self.label_23.setText( "Solver         ")

    def openFileNameDialog(self):
        global df
        global filename
        options = QtWidgets.QFileDialog.Options()
        #options |= QtWidgets.QFileDialog.DontUseNativeDialog
        fileName, _ = QtWidgets.QFileDialog.getOpenFileName(None,"QFileDialog.getOpenFileName()", "","All Files (*);;Python Files (*.py)",options=options)
        print(fileName)
        #D:/Tobias/Project/Bu Faridah/Random Forest/r33.csv
        filename=fileName.split('/')[-1]
        
        self.fileName.setText(fileName)
        # Buka dataset!
        df = pd.read_csv(fileName)
        
    
    def exit_app(self):
        import sys
        print("Shortcut pressed") #verification of shortcut press
        sys.exit()
    
    def parameter_training_sensasi(self):
        global model_sensasi
        global ml_sensasi
        
        print(ml_sensasi)
        if ml_sensasi == 'Random Forest':
            jumlah_tree=self.parameter1_sensasi.value()
            impurity_sensasi=self.parameter2_sensasi.currentText()
            depth_sensasi=self.parameter3_sensasi.value()
            min_split_sensasi=self.parameter4_sensasi.value()
            min_leaf_sensasi=self.parameter5_sensasi.value()
            fitur_sensasi=self.parameter6_sensasi.currentText()
        
            parameter_sensasi=[jumlah_tree,impurity_sensasi,depth_sensasi,min_split_sensasi,min_leaf_sensasi,fitur_sensasi]
            parameter_bener=atur_parameter_rf(parameter_sensasi)
            akurasi_sensasi_latih,akurasi_sensasi_uji,model_RF_sensasi=training_sensasi_rf(parameter_bener)
            model_sensasi=model_RF_sensasi

        elif ml_sensasi == 'Artificial Neural Network':
            #Unpack parameter
            hidden_layer_size= self.parameter1_sensasi.text()
            max_iter= self.parameter2_sensasi.value()
            activation = self.parameter3_sensasi.currentText()
            solver = self.parameter4_sensasi.currentText()
            learning_rate_init = self.parameter5_sensasi.value() 

            parameter_sensasi=[hidden_layer_size,max_iter,activation,solver,learning_rate_init]
        
            #Atur parameter duluu
            parameter_bener=atur_parameter_ann(parameter_sensasi)
        
            akurasi_sensasi_latih,akurasi_sensasi_uji,model_ANN_sensasi=training_sensasi_ann(parameter_bener)
            model_sensasi=model_ANN_sensasi
        #print(akurasi_sensasi_latih)
        
        self.akurasi_sensasi_latih.setText("%.4f" %akurasi_sensasi_latih)
        self.akurasi_sensasi_uji.setText("%.4f" %akurasi_sensasi_uji)
        
        
        
        #self.update()
        
        #self.label.setText("you pressed the button")
        #self.update()
        
    def parameter_training_kenyamanan(self):
        global model_kenyamanan
        global ml_kenyamanan
        
        print(ml_kenyamanan)
        if ml_kenyamanan == 'Random Forest':
            jumlah_tree=self.parameter1_kenyamanan.value()
            impurity_kenyamanan=self.parameter2_kenyamanan.currentText()
            depth_kenyamanan=self.parameter3_kenyamanan.value()
            min_split_kenyamanan=self.parameter4_kenyamanan.value()
            min_leaf_kenyamanan=self.parameter5_kenyamanan.value()
            fitur_kenyamanan=self.parameter6_kenyamanan.currentText()

            parameter_kenyamanan=[jumlah_tree,impurity_kenyamanan,depth_kenyamanan,min_split_kenyamanan,min_leaf_kenyamanan,fitur_kenyamanan]
        
            #Atur parameter duluu
            parameter_bener=atur_parameter_rf(parameter_kenyamanan)
            
            akurasi_kenyamanan_latih,akurasi_kenyamanan_uji,model_RF_kenyamanan=training_kenyamanan_rf(parameter_bener)

            model_kenyamanan=model_RF_kenyamanan

        elif ml_kenyamanan == 'Artificial Neural Network':
            #Unpack parameter
            hidden_layer_size= self.parameter1_kenyamanan.text()
            max_iter= self.parameter2_kenyamanan.value()
            activation = self.parameter3_kenyamanan.currentText()
            solver = self.parameter4_kenyamanan.currentText()
            learning_rate_init = self.parameter5_kenyamanan.value() 

            parameter_kenyamanan=[hidden_layer_size,max_iter,activation,solver,learning_rate_init]
        
            #Atur parameter duluu
            parameter_bener=atur_parameter_ann(parameter_kenyamanan)
        
            akurasi_kenyamanan_latih,akurasi_kenyamanan_uji,model_ANN_kenyamanan=training_kenyamanan_ann(parameter_bener)
            model_kenyamanan=model_ANN_kenyamanan

        
        
        self.akurasi_kenyamanan_latih.setText("%.4f" %akurasi_kenyamanan_latih)
        self.akurasi_kenyamanan_uji.setText("%.4f" %akurasi_kenyamanan_uji)
              
    def parameter_training_penerimaan(self):
        global model_penerimaan
        global ml_penerimaan
        
        print(ml_penerimaan)
        if ml_penerimaan == 'Random Forest':
            jumlah_tree=self.parameter1_penerimaan.value()
            impurity_penerimaan=self.parameter2_penerimaan.currentText()
            depth_penerimaan=self.parameter3_penerimaan.value()
            min_split_penerimaan=self.parameter4_penerimaan.value()
            min_leaf_penerimaan=self.parameter5_penerimaan.value()
            fitur_penerimaan=self.parameter6_penerimaan.currentText()

            parameter_penerimaan=[jumlah_tree,impurity_penerimaan,depth_penerimaan,min_split_penerimaan,min_leaf_penerimaan,fitur_penerimaan]
        
            #Atur parameter duluu
            parameter_bener=atur_parameter_rf(parameter_penerimaan)
            
            akurasi_penerimaan_latih,akurasi_penerimaan_uji,model_RF_penerimaan=training_penerimaan_rf(parameter_bener)

            model_penerimaan=model_RF_penerimaan

        elif ml_penerimaan == 'Artificial Neural Network':
            #Unpack parameter
            hidden_layer_size= self.parameter1_penerimaan.text()
            max_iter= self.parameter2_penerimaan.value()
            activation = self.parameter3_penerimaan.currentText()
            solver = self.parameter4_penerimaan.currentText()
            learning_rate_init = self.parameter5_penerimaan.value() 

            parameter_penerimaan=[hidden_layer_size,max_iter,activation,solver,learning_rate_init]
        
            #Atur parameter duluu
            parameter_bener=atur_parameter_ann(parameter_penerimaan)
        
            akurasi_penerimaan_latih,akurasi_penerimaan_uji,model_ANN_penerimaan=training_penerimaan_ann(parameter_bener)
            model_penerimaan=model_ANN_penerimaan
        
        self.akurasi_penerimaan_latih.setText("%.4f" %akurasi_penerimaan_latih)
        self.akurasi_penerimaan_uji.setText("%.4f" %akurasi_penerimaan_uji)
        
        

#FUNGSI UNTUK MODEL RF
def atur_parameter_rf(parameter):
    #Unpack parameter
    jumlah_tree=int(parameter[0])
    impurity=str(parameter[1])
    
    if impurity=='Gini Impurity':
        impurity='gini'
    
    elif impurity=='Entropy':
        impurity='entropy'
    
    
    max_depth=int(parameter[2])
    
    if max_depth==0:
        max_depth=None
        
    min_split=int(parameter[3])
    min_leaf = int(parameter[4])
    
    fitur= parameter[5]
    if fitur=='Auto':
        fitur='auto'
    elif fitur=='Square root':
        fitur='sqrt'
    elif fitur=='log2':
        fitur='log2'
        
    parameter_bener=[jumlah_tree,impurity,max_depth,min_split,min_leaf,fitur]
    return parameter_bener

def training_sensasi_rf(parameter):
    #MODEL SENSASI
    global df
    df=df
    # memisahkan data input dan data output
    #PERHATIKAN,  INI KHUSUS UNTUK DATASET TRAINING YANG LAMA. YANG MASIH ADA 6 SENSOR OUTDOORR
    #URUTAN SENSOR OUTDOORNYA field5, field4, field6, field1, field2 
    #windspeed, wind direction, solarpower, humidity, temperature
    
    X_sensasi = df.loc[:,['usia','kelamin','tinggi','berat','jilbab','ac','durasi_ac',
                'durasi_kipas','asal','lama_dijogja','in_rh','in_co2','in_ta',
                  'in_tg','in_ws','in_li','out_data5','out_data4','out_data6',
                  'out_data1','out_data2']]
    y_sensasi = df.loc[:,['sensasi']]
    
    y_sensasi=np.ravel(y_sensasi.values)
    # memisahkan 80% data latih, 20% data pengujian
    X_latih_sensasi, X_uji_sensasi, y_latih_sensasi, y_uji_sensasi = train_test_split(X_sensasi, y_sensasi, test_size=0.2)
    
    
    #Unpack parameter
    jumlah_tree=int(parameter[0])
    impurity=str(parameter[1])
    max_depth=parameter[2]
    min_split=int(parameter[3])
    min_leaf = int(parameter[4])
    fitur= parameter[5]
    
    
    model_RF_sensasi=RandomForestClassifier(n_estimators=jumlah_tree,criterion=impurity, max_depth =max_depth, min_samples_split=min_split, min_samples_leaf=min_leaf,max_features=fitur)
    
    model_RF_sensasi.fit(X_latih_sensasi,y_latih_sensasi)
    

    
    #Hasil Uji
    
    y_latih_pred_sensasi = model_RF_sensasi.predict(X_latih_sensasi)
    akurasi_latih_sensasi=accuracy_score(y_latih_sensasi, y_latih_pred_sensasi)
    #print('Pengujian terhadap data latih :')
    #print('akurasi sensasi termal :',akurasi_latih_sensasi )
    
    y_uji_pred_sensasi = model_RF_sensasi.predict(X_uji_sensasi)
    akurasi_uji_sensasi = accuracy_score(y_uji_sensasi, y_uji_pred_sensasi)
    #print('\nPengujian terhadap data uji :')
    #print('akurasi sensasi termal :', akurasi_uji_sensasi)
    #print('akurasi kenyamanan termal:', accuracy_score(y_uji.to_numpy()[:,1], y_uji_pred[:,1]))
    #print('akurasi penerimaan termal:', accuracy_score(y_uji.to_numpy()[:,2], y_uji_pred[:,2]))
    
    return akurasi_latih_sensasi,akurasi_uji_sensasi,model_RF_sensasi

def training_kenyamanan_rf(parameter):
    global df
    #MODEL KEPUASAN/KENYAMANAN TERMAL
    # memisahkan data input dan data output
    X_kenyamanan = df.loc[:,['ac','durasi_ac','durasi_kipas','asal','lama_dijogja','sensasi']]
    y_kenyamanan = df.loc[:,['kepuasan',]]
    
    y_kenyamanan=np.ravel(y_kenyamanan.values)
    # memisahkan 80% data latih, 20% data pengujian
    X_latih_kenyamanan, X_uji_kenyamanan, y_latih_kenyamanan, y_uji_kenyamanan = train_test_split(X_kenyamanan, y_kenyamanan, test_size=0.2)
    
    #Unpack parameter
    jumlah_tree=int(parameter[0])
    impurity=str(parameter[1])
    max_depth=parameter[2]
    min_split=int(parameter[3])
    min_leaf = int(parameter[4])
    fitur= parameter[5]
    
    model_RF_kenyamanan=RandomForestClassifier(n_estimators=jumlah_tree,criterion=impurity, max_depth =max_depth, min_samples_split=min_split, min_samples_leaf=min_leaf,max_features=fitur)
                                            #, criterion = criterion, max_depth =max_depth, min_samples_split=min_samples_split, min_samples_leaf=min_samples_leaf,max_features=max_features)
    
    model_RF_kenyamanan.fit(X_latih_kenyamanan,y_latih_kenyamanan)
    
    y_latih_pred_kenyamanan = model_RF_kenyamanan.predict(X_latih_kenyamanan)
    akurasi_latih_kenyamanan=accuracy_score(y_latih_kenyamanan, y_latih_pred_kenyamanan)

    y_uji_pred_kenyamanan = model_RF_kenyamanan.predict(X_uji_kenyamanan)
    akurasi_uji_kenyamanan = accuracy_score(y_uji_kenyamanan, y_uji_pred_kenyamanan)

    
    return akurasi_latih_kenyamanan,akurasi_uji_kenyamanan,model_RF_kenyamanan

def training_penerimaan_rf(parameter):
    global df
    X_penerimaan = df.loc[:,['ac','durasi_ac','durasi_kipas','asal','lama_dijogja','sensasi','kepuasan']]
    y_penerimaan = df.loc[:,['penerimaan']]
    
    y_penerimaan=np.ravel(y_penerimaan.values)
    # memisahkan 80% data latih, 20% data pengujian
    X_latih_penerimaan, X_uji_penerimaan, y_latih_penerimaan, y_uji_penerimaan = train_test_split(X_penerimaan, y_penerimaan, test_size=0.2)

    #Unpack parameter
    jumlah_tree=int(parameter[0])
    impurity=str(parameter[1])
    max_depth=parameter[2]
    min_split=int(parameter[3])
    min_leaf = int(parameter[4])
    fitur= parameter[5]
    
    model_RF_penerimaan=RandomForestClassifier(n_estimators=jumlah_tree,criterion=impurity, max_depth =max_depth, min_samples_split=min_split, min_samples_leaf=min_leaf,max_features=fitur)
                                            #, criterion = criterion, max_depth =max_depth, min_samples_split=min_samples_split, min_samples_leaf=min_samples_leaf,max_features=max_features)
    
    model_RF_penerimaan.fit(X_latih_penerimaan,y_latih_penerimaan)
    
    y_latih_pred_penerimaan = model_RF_penerimaan.predict(X_latih_penerimaan)
    akurasi_latih_penerimaan=accuracy_score(y_latih_penerimaan, y_latih_pred_penerimaan)

    y_uji_pred_penerimaan = model_RF_penerimaan.predict(X_uji_penerimaan)
    akurasi_uji_penerimaan = accuracy_score(y_uji_penerimaan, y_uji_pred_penerimaan)

    
    return akurasi_latih_penerimaan,akurasi_uji_penerimaan,model_RF_penerimaan

#FUNGSI UNTUK MODEL ANN
def atur_parameter_ann(parameter):
    #Unpack parameter
    #Unpack parameter
        #hidden_layer_size= (tuple), default(100,)
        #max_iter= int default 200
        #activation = 'identity', logictic, tanh, relu default relu
        #solver = 'lbfgs', 'sgd', 'adam' default adam
        #learning_rate_init = 
        #if solver = sgd, then learning_rate =
    hidden_layer_size=parameter[0]
    #Ngatur default
    if hidden_layer_size.find(',')== -1:
        hidden_layer_size=tuple([int(hidden_layer_size)])
    elif hidden_layer_size.find(',')!= -1:
        a=hidden_layer_size.split(',')
        layer_size=[]
        for element in a:
            element = int(element)
            layer_size.append(element)
        hidden_layer_size=tuple(layer_size)    
    
    
    max_iter=int(parameter[1])
    
    activation=str(parameter[2])

    if activation=='ReLu':
        activation='relu'
    
    elif activation=='Logistic/Sigmoid':
        activation='logistic'
    
    elif activation=='Tanh':
        activation='tanh'
    
    elif activation=='Identity':
        activation='identity'


    solver=str(parameter[3])
    if solver=='Stochastic G. Opt.':
        solver='lbfgs'
    
    elif solver=='Stochastic G. D.':
        solver='sgd'
    
    elif solver=='Quasi-Newton':
        solver='adam'

    learning_rate_init=float(parameter[4])
    
        
    parameter_bener=[hidden_layer_size,max_iter,activation,solver,learning_rate_init]
    return parameter_bener

def training_sensasi_ann(parameter):
    #MODEL SENSASI
    global df
    global scaler_sensasi
    df=df
    # memisahkan data input dan data output
    #PERHATIKAN,  INI KHUSUS UNTUK DATASET TRAINING YANG LAMA. YANG MASIH ADA 6 SENSOR OUTDOORR
    #URUTAN SENSOR OUTDOORNYA field5, field4, field6, field1, field2 
    #windspeed, wind direction, solarpower, humidity, temperature
    
    X_sensasi = df.loc[:,['usia','kelamin','tinggi','berat','jilbab','ac','durasi_ac',
                'durasi_kipas','asal','lama_dijogja','in_rh','in_co2','in_ta',
                  'in_tg','in_ws','in_li','out_data5','out_data4','out_data6',
                  'out_data1','out_data2']]
    y_sensasi = df.loc[:,['sensasi']]
    
    y_sensasi=np.ravel(y_sensasi.values)
    # memisahkan 80% data latih, 20% data pengujian
    X_latih_sensasi, X_uji_sensasi, y_latih_sensasi, y_uji_sensasi = train_test_split(X_sensasi, y_sensasi, test_size=0.2)
    print(type(X_uji_sensasi))
    scaler_sensasi = StandardScaler()  # doctest: +SKIP
    # Don't cheat - fit only on training data
    scaler_sensasi.fit(X_latih_sensasi)  # doctest: +SKIP
    X_latih_sensasi = scaler_sensasi.transform(X_latih_sensasi)  # doctest: +SKIP
    # apply same transformation to test data
    X_uji_sensasi = scaler_sensasi.transform(X_uji_sensasi)  # doctest: +SKIP
    print(X_uji_sensasi)
    #Unpack parameter
    hidden_layer_size=parameter[0]
    max_iter=parameter[1]
    activation=parameter[2]
    solver=parameter[3]
    learning_rate_init = parameter[4]
    
    
    
    model_ANN_sensasi=MLPClassifier(hidden_layer_sizes = hidden_layer_size, max_iter=max_iter, activation=activation,solver=solver, learning_rate_init=learning_rate_init, early_stopping=True, validation_fraction=0.2)

    model_ANN_sensasi.fit(X_latih_sensasi,y_latih_sensasi)

    y_latih_pred_sensasi = model_ANN_sensasi.predict(X_latih_sensasi)
    akurasi_latih_sensasi=accuracy_score(y_latih_pred_sensasi, y_latih_sensasi)

    y_uji_pred_sensasi = model_ANN_sensasi.predict(X_uji_sensasi)
    akurasi_uji_sensasi = accuracy_score(y_uji_sensasi, y_uji_pred_sensasi)
    
    return akurasi_latih_sensasi,akurasi_uji_sensasi,model_ANN_sensasi

def training_kenyamanan_ann(parameter):
    global df
    global scaler_kenyamanan
    #MODEL KEPUASAN/KENYAMANAN TERMAL
    # memisahkan data input dan data output
    X_kenyamanan = df.loc[:,['ac','durasi_ac','durasi_kipas','asal','lama_dijogja','sensasi']]
    y_kenyamanan = df.loc[:,['kepuasan',]]
    
    y_kenyamanan=np.ravel(y_kenyamanan.values)
    # memisahkan 80% data latih, 20% data pengujian
    X_latih_kenyamanan, X_uji_kenyamanan, y_latih_kenyamanan, y_uji_kenyamanan = train_test_split(X_kenyamanan, y_kenyamanan, test_size=0.2)
    
    scaler_kenyamanan = StandardScaler()  # doctest: +SKIP
    # Don't cheat - fit only on training data
    scaler_kenyamanan.fit(X_latih_kenyamanan)  # doctest: +SKIP
    X_latih_kenyamanan = scaler_kenyamanan.transform(X_latih_kenyamanan)  # doctest: +SKIP
    # apply same transformation to test data
    X_uji_kenyamanan = scaler_kenyamanan.transform(X_uji_kenyamanan)  # doctest: +SKIP
    #Unpack parameter
   
    hidden_layer_size=parameter[0]
    max_iter=parameter[1]
    activation=parameter[2]
    solver=parameter[3]
    learning_rate_init = parameter[4]

    model_ANN_kenyamanan=MLPClassifier(hidden_layer_sizes = hidden_layer_size, max_iter=max_iter, activation=activation,solver=solver, learning_rate_init=learning_rate_init,early_stopping=True, validation_fraction=0.2)

    model_ANN_kenyamanan.fit(X_latih_kenyamanan,y_latih_kenyamanan)

    y_latih_pred_kenyamanan = model_ANN_kenyamanan.predict(X_latih_kenyamanan)
    akurasi_latih_kenyamanan=accuracy_score(y_latih_kenyamanan, y_latih_pred_kenyamanan)

    y_uji_pred_kenyamanan = model_ANN_kenyamanan.predict(X_uji_kenyamanan)
    akurasi_uji_kenyamanan = accuracy_score(y_uji_kenyamanan, y_uji_pred_kenyamanan)

    
    return akurasi_latih_kenyamanan,akurasi_uji_kenyamanan,model_ANN_kenyamanan
    
def training_penerimaan_ann(parameter):
    global df
    global scaler_penerimaan

    X_penerimaan = df.loc[:,['ac','durasi_ac','durasi_kipas','asal','lama_dijogja','sensasi','kepuasan']]
    y_penerimaan = df.loc[:,['penerimaan']]
    
    y_penerimaan=np.ravel(y_penerimaan.values)
    # memisahkan 80% data latih, 20% data pengujian
    X_latih_penerimaan, X_uji_penerimaan, y_latih_penerimaan, y_uji_penerimaan = train_test_split(X_penerimaan, y_penerimaan, test_size=0.2)
    
    scaler_penerimaan = StandardScaler()  # doctest: +SKIP
    # Don't cheat - fit only on training data
    scaler_penerimaan.fit(X_latih_penerimaan)  # doctest: +SKIP
    X_latih_penerimaan = scaler_penerimaan.transform(X_latih_penerimaan)  # doctest: +SKIP
    # apply same transformation to test data
    X_uji_penerimaan = scaler_penerimaan.transform(X_uji_penerimaan)  # doctest: +SKIP

    #Unpack parameter
   
    hidden_layer_size=parameter[0]
    max_iter=parameter[1]
    activation=parameter[2]
    solver=parameter[3]
    learning_rate_init = parameter[4]
    
    model_ANN_penerimaan=MLPClassifier(hidden_layer_sizes = hidden_layer_size, max_iter=max_iter, activation=activation,solver=solver, learning_rate_init=learning_rate_init,early_stopping=True, validation_fraction=0.2)
                                            #, criterion = criterion, max_depth =max_depth, min_samples_split=min_samples_split, min_samples_leaf=min_samples_leaf,max_features=max_features)
    
    model_ANN_penerimaan.fit(X_latih_penerimaan,y_latih_penerimaan)
    
    y_latih_pred_penerimaan = model_ANN_penerimaan.predict(X_latih_penerimaan)
    akurasi_latih_penerimaan=accuracy_score(y_latih_penerimaan, y_latih_pred_penerimaan)

    y_uji_pred_penerimaan = model_ANN_penerimaan.predict(X_uji_penerimaan)
    akurasi_uji_penerimaan = accuracy_score(y_uji_penerimaan, y_uji_pred_penerimaan)

    
    return akurasi_latih_penerimaan,akurasi_uji_penerimaan,model_ANN_penerimaan


def simpan_model():
    global model_sensasi
    global model_kenyamanan
    global model_penerimaan
    global df
    global scaler_sensasi
    global scaler_kenyamanan
    global scaler_penerimaan
    
    nomor_ruang =df['kelas'][0]
    scaler = [scaler_sensasi,scaler_kenyamanan,scaler_penerimaan]
    model=[model_sensasi,model_kenyamanan,model_penerimaan,scaler]
    

    # model disimpan
    directory_simpan=os.getcwd()+'\\_OUTPUT MODEL'
    nama_file =nomor_ruang.lower()+'.pkl'
    try:
        os.makedirs(directory_simpan)    
        print("Directory " , directory_simpan ,  " Created ")
        
    except FileExistsError:
        print("Directory " , directory_simpan ,  " already exists")
    
    file_fullname = os.path.join(directory_simpan, nama_file)
    with open(file_fullname, 'wb') as file:
        pickle.dump(model, file)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
